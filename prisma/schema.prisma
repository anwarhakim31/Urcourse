generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model User{
  id String @id @default(uuid())
  email String @unique 
  fullname String 
  password String
  phone Int? @db.Integer
  photo String?
  isAdmin Boolean @default(false)
  createdAt DateTime @default(now())

  @@map("users")
}

model ResetToken{
  id String @id @default(uuid())
  user String 
  expired Int
  createdAt DateTime @default(now())

  @@map("resetToken")
}

model Course{
  id String @id @default(uuid())
  title String @db.Text
  description String? @db.Text
  image String? @db.Text
  price Float?
  isPublished Boolean @default(false)
  
  level Level?

  categoryId String?
  category Category? @relation(fields: [categoryId],references: [id] ,onDelete: SetNull)
  
  attachments Attachment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category{
  id String @id @default(uuid())
  name String @unique
  course Course[] 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Attachment{
  id String @id @default(uuid())
  name String 
  url String

  courseId String
  course Course @relation(fields: [courseId],references: [id],onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId])
}

enum Level {
  Beginner
  Intermediate
  Advanced
}